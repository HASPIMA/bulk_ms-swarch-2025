services:

  # Result Backend:
  mu_bulk_rb:
    image: redis:7-alpine

    container_name: ${mu_bulk_rb_HOSTNAME:-mu_bulk_rb}

    # Hostname for which the service will be reachable
    hostname: ${mu_bulk_rb_HOSTNAME:-mu_bulk_rb}

    # Ports exposed to OTHER SERVICES but NOT the HOST machine
    expose:
      - ${mu_whitelist_db_INTERNAL_PORT:-6379}

    restart: always

    volumes:
      - mu-bulk-rb-data:/data

  # Broker:
  mu_bulk_bkr:
    image: rabbitmq:4-management-alpine

    container_name: ${mu_bulk_bkr_HOSTNAME:-mu_bulk_bkr}

    # Hostname for which the service will be reachable
    hostname: ${mu_bulk_bkr_HOSTNAME:-mu_bulk_bkr}

    # Ports exposed to OTHER SERVICES but NOT the HOST machine
    expose:
      # Message queue
      - ${mu_bulk_bkr_INTERNAL_PORT:-5672}

      # Monitoring and management
      - ${mu_bulk_bkr_MANAGEMENT_INTERNAL_PORT:-15672}

    environment:
      RABBITMQ_NODE_PORT: ${mu_bulk_bkr_INTERNAL_PORT:-5672}
      RABBITMQ_DEFAULT_USER: ${mu_bulk_bkr_USER:-meetUN}
      RABBITMQ_DEFAULT_PASS: ${mu_bulk_bkr_PASS:-passMeetUN}
      RABBITMQ_DEFAULT_VHOST: ${mu_bulk_bkr_VHOST:-BulkMeetUN}

  # Microservice
  mu_bulk_ms:
    build: .

    depends_on:
      - mu_bulk_rb
      - mu_bulk_bkr

    container_name: ${mu_bulk_ms_HOSTNAME:-mu_bulk_ms}

    # Hostname for which the service will be reachable
    hostname: ${mu_bulk_ms_HOSTNAME:-mu_bulk_ms}

    ports:
      - ${mu_bulk_ms_EXTERNAL_PORT:-8080}:${mu_bulk_ms_INTERNAL_PORT:-8080}

    environment:
      CELERY_BROKER_URL: ${mu_bulk_CELERY_BROKER_URL:-amqp://${mu_bulk_bkr_USER:-meetUN}:${mu_bulk_bkr_PASS:-passMeetUN}@${mu_bulk_bkr_HOSTNAME:-mu_bulk_bkr}:${mu_bulk_bkr_INTERNAL_PORT:-5672}/${mu_bulk_bkr_VHOST:-BulkMeetUN}}
      CELERY_RESULT_BACKEND: ${mu_bulk_CELERY_RESULT_BACKEND:-redis://${mu_bulk_rb_HOSTNAME:-mu_bulk_rb}:${mu_bulk_rb_INTERNAL_PORT:-6379}/0}
      PORT: ${mu_bulk_ms_INTERNAL_PORT:-8080}

  # Worker:
  mu_bulk_wkr:
    build: .

    command: celery -A worker.celery worker --loglevel=info

    depends_on:
      - mu_bulk_ms

    environment:
      CELERY_BROKER_URL: ${mu_bulk_CELERY_BROKER_URL:-amqp://${mu_bulk_bkr_USER:-meetUN}:${mu_bulk_bkr_PASS:-passMeetUN}@${mu_bulk_bkr_HOSTNAME:-mu_bulk_bkr}:${mu_bulk_bkr_INTERNAL_PORT:-5672}/${mu_bulk_bkr_VHOST:-BulkMeetUN}}
      CELERY_RESULT_BACKEND: ${mu_bulk_CELERY_RESULT_BACKEND:-redis://${mu_bulk_rb_HOSTNAME:-mu_bulk_rb}:${mu_bulk_rb_INTERNAL_PORT:-6379}/0}

  # Task dashboard:
  mu_bulk_dashboard:
    build: .

    depends_on:
      - mu_bulk_wkr

    container_name: ${mu_bulk_dashboard_HOSTNAME:-mu_bulk_dashboard}

    # Hostname for which the service will be reachable
    hostname: ${mu_bulk_dashboard_HOSTNAME:-mu_bulk_dashboard}

    # FIXME: Generalize port by using an environment variable
    command: celery --broker=${mu_bulk_CELERY_BROKER_URL:-amqp://${mu_bulk_bkr_USER:-meetUN}:${mu_bulk_bkr_PASS:-passMeetUN}@${mu_bulk_bkr_HOSTNAME:-mu_bulk_bkr}:${mu_bulk_bkr_INTERNAL_PORT:-5672}/${mu_bulk_bkr_VHOST:-BulkMeetUN}} flower --port=${mu_bulk_dashboard_INTERNAL_PORT:-5555}

    # Ports available on the HOST machine
    ports:
      - ${mu_bulk_dashboard_EXTERNAL_PORT:-5555}:${mu_bulk_dashboard_INTERNAL_PORT:-5555}

    environment:
      mu_bulk_CELERY_BROKER_URL: ${mu_bulk_CELERY_BROKER_URL:-redis://${mu_bulk_rb_HOSTNAME:-mu_bulk_rb}:${mu_bulk_rb_INTERNAL_PORT:-6379}/0}
      mu_bulk_dashboard_INTERNAL_PORT: ${mu_bulk_dashboard_INTERNAL_PORT:-5555}

volumes:
  mu-bulk-rb-data:
